{"version":3,"sources":["components/FriendList/FriendList.js","components/Statistics/Statistics.js","components/Profile/Profile.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["FriendList","friends","className","map","avatar","name","isOnline","id","src","alt","width","Statistics","title","stats","label","percentage","style","backgroundColor","randomColor","defaultProps","Profile","tag","location","followers","views","likes","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+5GAwBeA,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIC,UAAU,cAAd,SACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,GAA3B,OACX,qBAAaL,UAAU,mBAAvB,UACE,sBAAMA,UAAWI,EAAW,SAAW,mBACvC,qBAAKJ,UAAU,SAASM,IAAKJ,EAAQK,IAAKJ,EAAMK,MAAM,OACtD,mBAAGR,UAAWG,EAAd,SAAqBA,MAHdE,S,gBCDTI,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACjB,0BAASX,UAAU,aAAnB,UACGU,GAAS,oBAAIV,UAAU,mBAAd,SAAkCU,IAC5C,oBAAIV,UAAU,uBAAd,SACGW,EAAMV,KAAI,gBAAGI,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACT,qBACEC,MAAO,CAAEC,gBAAiBC,OAE1BhB,UAAU,kBAHZ,UAKE,uBAAMA,UAAU,mBAAhB,UAAoCY,EAApC,OACA,uBAAMZ,UAAU,wBAAhB,UAAyCa,EAAzC,SAJKR,aAUfI,EAAWQ,aAAe,CACxBP,MAAO,IAcMD,QCQAS,G,MAzCC,SAAC,GAA4C,IAA1ChB,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMgB,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUT,EAAY,EAAZA,MAC9C,OACE,sBAAKX,UAAU,UAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKM,IAAKJ,EAAQK,IAAKJ,EAAMH,UAAU,mBACvC,mBAAGA,UAAU,eAAb,SAA6BG,IAC7B,oBAAGH,UAAU,cAAb,cAA6BmB,KAC7B,mBAAGnB,UAAU,mBAAb,SAAiCoB,OAGnC,qBAAIpB,UAAU,gBAAd,UACE,+BACE,sBAAMA,UAAU,gBAAhB,uBACA,sBAAMA,UAAU,mBAAhB,SAAoCW,EAAMU,eAE5C,+BACE,sBAAMrB,UAAU,gBAAhB,mBACA,sBAAMA,UAAU,mBAAhB,SAAoCW,EAAMW,WAE5C,+BACE,sBAAMtB,UAAU,gBAAhB,mBACA,sBAAMA,UAAU,mBAAhB,SAAoCW,EAAMY,mBCWrCC,G,MAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,wBAAOzB,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGyB,EAAMxB,KAAI,gBAAGI,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHEvB,aCQFwB,EAdH,kBACV,gCACE,cAAC,EAAD,CACE1B,KAAM2B,EAAK3B,KACXgB,IAAKW,EAAKX,IACVC,SAAUU,EAAKV,SACflB,OAAQ4B,EAAK5B,OACbS,MAAOmB,EAAKnB,QAEd,cAAC,EAAD,CAAYD,MAAM,eAAeC,MAAOoB,IACxC,cAAC,EAAD,CAAYhC,QAASA,IACrB,cAAC,EAAD,CAAoB0B,MAAOO,QCf/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f507026.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FriendList.scss\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map(({ avatar, name, isOnline, id }) => (\r\n      <li key={id} className=\"friend-list-item\">\r\n        <span className={isOnline ? \"status\" : \"status-noActiv\"}></span>\r\n        <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n        <p className={name}>{name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport randomColor from \"randomcolor\";\r\n\r\nimport \"./Statistics.scss\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statistics\">\r\n    {title && <h2 className=\"statistics-title\">{title}</h2>}\r\n    <ul className=\"statistics-stat-list\">\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li\r\n          style={{ backgroundColor: randomColor() }}\r\n          key={id}\r\n          className=\"statistics-item\"\r\n        >\r\n          <span className=\"statistics-label\">{label} </span>\r\n          <span className=\"statistics-percentage\">{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Profile.scss\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-description\">\r\n        <img src={avatar} alt={name} className=\"profile-avatar\" />\r\n        <p className=\"profile-name\">{name}</p>\r\n        <p className=\"profile-tag\">@{tag}</p>\r\n        <p className=\"profile-location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"profile-stats\">\r\n        <li>\r\n          <span className=\"profile-label\">Followers</span>\r\n          <span className=\"profile-quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"profile-label\">Views</span>\r\n          <span className=\"profile-quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"profile-label\">Likes</span>\r\n          <span className=\"profile-quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./TransactionHistory.scss\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport user from \"./data/user.json\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transactions.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Profile from \"./components/Profile/Profile\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </div>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styly.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}